plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // aws s3 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //email 인증
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.23.2'

    //Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // slack
    implementation("com.slack.api:bolt:1.44.1")
    implementation("com.slack.api:bolt-servlet:1.44.1")
    implementation("com.slack.api:bolt-jetty:1.44.1")
    implementation("org.slf4j:slf4j-simple:1.7.36")

    // spring retry
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.10'

    // Elastic Search
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

//    //logback
//    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
//
//    //actuator
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//
//    //prometheus
//    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 */
def querydslDir = "src/main/generated"
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}
clean.doLast {
    file(querydslDir).deleteDir()
}
